// Code generated by MockGen. DO NOT EDIT.
// Source: util/password.go

// Package util_mock is a generated GoMock package.
package util_mock

import (
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
)

// MockPasswordInterface is a mock of PasswordInterface interface.
type MockPasswordInterface struct {
	ctrl     *gomock.Controller
	recorder *MockPasswordInterfaceMockRecorder
}

// MockPasswordInterfaceMockRecorder is the mock recorder for MockPasswordInterface.
type MockPasswordInterfaceMockRecorder struct {
	mock *MockPasswordInterface
}

// NewMockPasswordInterface creates a new mock instance.
func NewMockPasswordInterface(ctrl *gomock.Controller) *MockPasswordInterface {
	mock := &MockPasswordInterface{ctrl: ctrl}
	mock.recorder = &MockPasswordInterfaceMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockPasswordInterface) EXPECT() *MockPasswordInterfaceMockRecorder {
	return m.recorder
}

// CheckPasswordHash mocks base method.
func (m *MockPasswordInterface) CheckPasswordHash(password, hash string) bool {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "CheckPasswordHash", password, hash)
	ret0, _ := ret[0].(bool)
	return ret0
}

// CheckPasswordHash indicates an expected call of CheckPasswordHash.
func (mr *MockPasswordInterfaceMockRecorder) CheckPasswordHash(password, hash interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "CheckPasswordHash", reflect.TypeOf((*MockPasswordInterface)(nil).CheckPasswordHash), password, hash)
}

// HashPassword mocks base method.
func (m *MockPasswordInterface) HashPassword(password string) (string, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "HashPassword", password)
	ret0, _ := ret[0].(string)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// HashPassword indicates an expected call of HashPassword.
func (mr *MockPasswordInterfaceMockRecorder) HashPassword(password interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "HashPassword", reflect.TypeOf((*MockPasswordInterface)(nil).HashPassword), password)
}
